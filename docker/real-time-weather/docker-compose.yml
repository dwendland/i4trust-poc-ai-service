version: '3.5'

secrets:
  rtw_key:
    file: "${RTW_TOKEN_KEY_FILE}"
  rtw_cert:
    file: "${RTW_TOKEN_CRT_FILE}"

services:
  rtw-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: rtw-elasticsearch
    environment:
      - discovery.type=single-node
      - transport.publish_port=9200
    networks:
      rtw:
        aliases:
          - rtw-elasticsearch.docker
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      start_period: 30s
      interval: 30s
      timeout: 30s
      retries: 3

  rtw-mongo:
    image: mongo:3.6.21
    container_name: rtw-mongo
    networks:
      rtw:
        aliases:
          - rtw-mongo.docker
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u root -p root --quiet | grep 1
      start_period: 30s
      interval: 30s
      timeout: 30s
      retries: 3
    env_file:
      - ./real-time-weather/envs/mongo.env
    volumes:
      - ./real-time-weather/db/init-mongo.js:/docker-entrypoint-initdb.d/01_init-mongo.js:ro
      - ./real-time-weather/db/init-mongo-dump.sh:/docker-entrypoint-initdb.d/02_init-mongo-dump.sh:ro
      - ./real-time-weather/db/api_umbrella:/dump/api_umbrella

  rtw-mysql:
    image: mysql:5.7
    container_name: rtw-mysql
    networks:
      rtw:
        aliases:
          - rtw-mysql.docker
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -hlocalhost -P 8152 -u root -proot --silent"]
      start_period: 30s
      interval: 30s
      timeout: 30s
      retries: 3
    env_file:
      - ./real-time-weather/envs/mysql.env
    volumes:
      - ./real-time-weather/db/init-mysql.sql:/docker-entrypoint-initdb.d/init-mysql.sql

  rtw-keyrock:
    image: fiware/idm:i4trust-rc6
    container_name: rtw-keyrock
    networks:
      rtw:
        aliases:
          - rtw-keyrock.docker
      shared:
        ipv4_address: 10.2.0.40
    depends_on:
      - rtw-mysql
    entrypoint: /init/init-keyrock.sh
    env_file:
      - ./real-time-weather/envs/keyrock.env
    secrets:
      - rtw_key
      - rtw_cert
    environment:
      - RTW_EORI
      - RTW_TOKEN_KEY_CONTENT
      - RTW_TOKEN_CRT_CONTENT
      - RTW_TOKEN_KEY_FILE
      - RTW_TOKEN_CRT_FILE
      - SATELLITE_HOST
      - SATELLITE_TOKEN_ENDPOINT
      - SATELLITE_PARTIES_ENDPOINT
      - SATELLITE_EORI
    volumes:
      - ./real-time-weather/init/init-keyrock.sh:/init/init-keyrock.sh

  rtw-umbrella:
    image: fiware/api-umbrella:0.18.0
    container_name: rtw-umbrella
    networks:
      rtw:
        aliases:
          - rtw-umbrella.docker
      shared:
        ipv4_address: 10.2.0.41
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost/api-umbrella/v1/health | python -mjson.tool | grep '\"status\": \"green\"' || exit 1"]
      start_period: 30s
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      - rtw-mongo
      - rtw-elasticsearch
    entrypoint: /init/init-umbrella.sh
    secrets:
      - rtw_key
      - rtw_cert
    environment:
      - RTW_EORI
      - RTW_TOKEN_KEY_CONTENT
      - RTW_TOKEN_CRT_CONTENT
      - RTW_TOKEN_KEY_FILE
      - RTW_TOKEN_CRT_FILE
      - SATELLITE_HOST
      - SATELLITE_TOKEN_ENDPOINT
      - SATELLITE_TRUSTED_LIST_ENDPOINT
      - SATELLITE_EORI
    volumes:
      - ./real-time-weather/init/init-umbrella.sh:/init/init-umbrella.sh
      - ./real-time-weather/umbrella-conf/api-umbrella.template.yml:/etc/api-umbrella/api-umbrella.template.yml
    tmpfs:
      # Mount the ember-cli tmp directory as a tmpfs partition for better
      # performance.
      - /app/src/api-umbrella/admin-ui/tmp:rw,size=128m,mode=1777

  rtw-orion:
    image: quay.io/fiware/orion-ld:1.0.1
    container_name: rtw-orion
    networks:
      rtw:
        aliases:
          - rtw-orion.docker
      #shared:
      #  ipv4_address: 10.2.0.42
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:1026/version || exit 1"]
      start_period: 30s
      interval: 30s
      timeout: 30s
      retries: 3
    depends_on:
      - rtw-mongo
    env_file:
      - ./real-time-weather/envs/orion.env
    command: -dbhost rtw-mongo.docker -logLevel DEBUG
      
